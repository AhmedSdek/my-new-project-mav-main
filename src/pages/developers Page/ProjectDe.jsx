import React, { useEffect, useState } from "react";
import { Link, useParams } from "react-router-dom";
import { db } from "../../firebase/config";
import { useDocument } from "react-firebase-hooks/firestore";
import {
  collection,
  doc,
  getDoc,
  getDocs,
  query,
  where,
} from "firebase/firestore";
import {
  Box,
  Button,
  Card,
  CardContent,
  Container,
  Divider,
  IconButton,
  Stack,
  Typography,
} from "@mui/material";
// Import Swiper React components
import { Swiper, SwiperSlide } from "swiper/react";
import ReactMarkdown from "react-markdown";
// Import Swiper styles
import "swiper/css";
import "swiper/css/effect-coverflow";
import "swiper/css/pagination";
import "swiper/css/free-mode";
import "swiper/css/navigation";
import "./developers.css";
import { Autoplay, FreeMode, Navigation, Pagination } from "swiper/modules";
import ContactUsBtn from "../../comp/Contact Us/ContactUsBtn";
import { Close } from "@mui/icons-material";
import MavLoading from "../../comp/Loading/MavLoading";
import {
  TransformComponent,
  TransformWrapper,
  useControls,
} from "react-zoom-pan-pinch";
import { Col, Row } from "react-bootstrap";
import ContactUsIcon from "../../comp/Contact Us/ContactUsIcon";
import { useTranslation } from "react-i18next";
import { useGlobal } from "../../context/GlobalContext";
const Controls = () => {
  const { zoomIn, zoomOut, resetTransform } = useControls();

  return (
    <Stack sx={{ flexDirection: "row", gap: 2 }} className="tools">
      <Button
        variant="contained"
        sx={{ minWidth: "initial" }}
        onClick={() => zoomIn()}
      >
        +
      </Button>
      <Button
        variant="contained"
        sx={{ minWidth: "initial" }}
        onClick={() => zoomOut()}
      >
        -
      </Button>
      <Button
        variant="contained"
        sx={{ minWidth: "initial" }}
        onClick={() => resetTransform()}
      >
        x
      </Button>
    </Stack>
  );
};
function ProjectDe() {
  const { devId, projId } = useParams();
  // console.log({ devId, projId });
  const { i18n } = useTranslation();
  const lang = i18n.language;
  const { country } = useGlobal();
  const [compound, setCompound] = useState({});
  console.log(compound);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [loadingInventory, setLoadingInventory] = useState(true);
  const [errorInventory, setErrorInventory] = useState(null);
  const [open, setOpen] = useState(false);
  const [imgsrc, setImgsrc] = useState("");
  const [relatedProjects, setRelatedProjects] = useState([]); // تخزين المشاريع ذات الصلة
  console.log(relatedProjects);
  const [imgopen, setImgopen] = useState(false);
  useEffect(() => {
    const fetchCompound = async () => {
      try {
        const docRef = doc(db, "compound", projId);
        const docSnap = await getDoc(docRef);
        // console.log(docSnap);
        setCompound({ id: docSnap.id, ...docSnap.data() });
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };
    fetchCompound();
  }, [projId]);
  useEffect(() => {
    const fetchRelatedProjects = async () => {
      try {
        const q = query(
          collection(db, "inventory"),
          where("compoundId", "==", projId)
        );
        const snapshot = await getDocs(q);
        const RelatedProjectsData = snapshot.docs.map((doc) => ({
          id: doc.id,
          ...doc.data(),
        }));
        setRelatedProjects(RelatedProjectsData);
      } catch (err) {
        setErrorInventory(err.message);
      } finally {
        setLoadingInventory(false);
      }
    };
    fetchRelatedProjects();
  }, [projId]);
  if (loading) {
    return (
      <div
        style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          height: "calc(100vh - 100px)",
        }}
      >
        <MavLoading />
      </div>
    );
  }
  if (error) {
    return <h1 style={{ margin: "60px 0" }}>err</h1>;
  }

  return (
    <div style={{ marginTop: "58px", minHeight: "calc(100vh - 100px)" }}>
      <div>
        <Container>
          <Stack sx={{ flexDirection: "row", gap: "10px" }}>
            <Swiper
              spaceBetween={10}
              slidesPerView={4}
              freeMode={true}
              // centeredSlides={true}
              loop={true}
              breakpoints={{
                200: {
                  slidesPerView: 1,
                  // slidesPerGroup: 1,
                  // spaceBetween: 20,
                },
                // when window width is >= 480px
                767: {
                  slidesPerView: 3,
                  // slidesPerGroup: 1,
                  // spaceBetween: 300,
                },
                992: {
                  slidesPerView: 3,
                  // slidesPerView: 8,
                  // slidesPerGroup: 1,
                  // spaceBetween: 20
                },
                1200: {
                  // slidesPerView: 8,
                  // slidesPerGroup: 1,
                  // spaceBetween: 20
                },
                1400: {
                  // slidesPerView: 8,
                  // spaceBetween: 20
                },
              }}
              autoplay={{
                delay: 2500,
                disableOnInteraction: false,
              }}
              navigation={true}
              modules={[FreeMode, Pagination, Navigation, Autoplay]}
              className="mySwiper2"
            >
              {compound.compoundImgs.map((img, index) => {
                return (
                  <SwiperSlide key={index}>
                    <img
                      style={{ cursor: "pointer" }}
                      onClick={() => {
                        setImgsrc(img);
                        setImgopen(true);
                      }}
                      src={img}
                      alt={compound.compoundName[lang]}
                    />
                  </SwiperSlide>
                );
              })}
            </Swiper>
          </Stack>
        </Container>
        <Container>
          <Stack>
            <Stack
              sx={{
                flexDirection: { sm: "column", md: "row" },
                justifyContent: "space-between",
                alignItems: "center",
                marginBottom: "15px",
              }}
            >
              <Stack
                sx={{
                  flexDirection: "row",
                  justifyContent: "space-between",
                  alignItems: "center",
                  gap: 3,
                }}
              >
                <img
                  style={{
                    width: "100px",
                    boxShadow: "0 -1px 15px -3px rgba(0, 0, 0, 0.2)",
                    borderRadius: "50%",
                  }}
                  src={compound.devIcon}
                  alt={compound.developer.devName[lang]}
                />
                <div>
                  <Typography variant="h5" sx={{ fontWeight: "bold" }}>
                    {compound.compoundName[lang]}
                  </Typography>
                  <Typography variant="caption">
                    {compound.Location[lang]}
                  </Typography>
                  <Typography
                    variant="h6"
                    sx={{ padding: "10px 0", fontWeight: "bold" }}
                  >
                    <Typography
                      variant="caption"
                      sx={{
                        fontSize: "10px",
                        display: "block",
                        lineHeight: "1",
                        color: "rgb(182, 182, 182)",
                      }}
                    >
                      Prices Start From
                    </Typography>
                    {`${compound.price} EGP`}
                  </Typography>
                </div>
              </Stack>
              <Stack sx={{ gap: 3, alignItems: "center" }}>
                <span className="text-2" style={{ width: "fit-content" }}>
                  Compound
                </span>
                <ContactUsBtn sectionName="Compound" sectionData={compound} />
              </Stack>
            </Stack>
          </Stack>
          <Divider color="rgb(48 80 112)" />
          <Stack sx={{ padding: "10px 0" }}>
            <Stack
              sx={{
                flexDirection: "row",
                justifyContent: {
                  xs: "center",
                  sm: "center",
                  md: "start",
                },
                flexWrap: "wrap",
                gap: 5,
              }}
            >
              <Stack>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  Details
                </Typography>
                <Button
                  onClick={() => {
                    setOpen(true);
                  }}
                  sx={{
                    width: "150px",
                    borderColor: "black",
                    padding: "5px",
                  }}
                  variant="outlined"
                >
                  <div className="sc-6c7c04b6-0 hehFCg">
                    <svg
                      width="42"
                      height="38"
                      viewBox="0 0 42 38"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <mask
                        id="path-1-outside-1_7869_2283"
                        maskUnits="userSpaceOnUse"
                        x="0"
                        y="0"
                        width="42"
                        height="38"
                        fill="black"
                      >
                        <rect fill="white" width="42" height="38"></rect>
                        <path d="M18.1785 36.8954C12.7119 36.8954 7.24528 36.8954 1.77869 36.8954C1.01573 36.8954 1 36.8793 1 36.1236C1 27.6582 1 19.2008 1 10.7353C1 9.97964 1.01573 9.96357 1.73937 9.96357C6.0969 9.96357 10.4544 9.96357 14.8041 9.96357C15.3154 9.96357 15.6379 9.42493 15.394 8.95865C14.458 7.14175 15.0794 5.10779 16.8649 4.13503C17.0694 4.02248 17.1402 3.89385 17.1402 3.66875C17.1402 3.14619 17.1166 2.62363 17.1717 2.10911C17.266 1.24086 18.2414 0.726338 18.9493 1.15242C19.2875 1.35341 19.4841 1.6589 19.4841 2.06891C19.492 2.59147 19.4684 3.11403 19.4999 3.62855C19.5077 3.77326 19.6257 3.97424 19.7516 4.03856C21.6708 5.01132 22.3158 7.03724 21.3326 9.00688C21.128 9.40885 21.4505 9.95553 21.891 9.95553C25.6586 9.95553 29.4262 9.95553 33.1939 9.96357C33.5321 9.96357 33.6107 9.85101 33.6029 9.52944C33.5871 7.75274 33.595 5.97604 33.595 4.1913C33.595 3.60443 33.6973 3.50796 34.2636 3.54012C38.0233 3.75718 40.8943 6.86037 40.8943 10.7112C40.8943 17.1025 40.8943 23.4938 40.8943 29.8851C40.8943 33.2375 38.7627 35.9789 35.5771 36.7105C34.9715 36.8472 34.3344 36.8793 33.7051 36.8874C28.5374 36.9035 23.3619 36.8954 18.1785 36.8954ZM4.74402 33.1491C14.5917 33.1491 24.3923 33.1491 34.2164 33.1491C34.2164 32.9481 34.2164 32.7873 34.2164 32.6265C34.2164 30.689 34.2164 28.7516 34.2164 26.806C34.2164 26.6613 34.1928 26.4925 34.2557 26.3719C34.3108 26.2674 34.4602 26.1388 34.5703 26.1468C34.6726 26.1468 34.7985 26.2835 34.8692 26.396C34.9164 26.4764 34.9007 26.605 34.9007 26.7096C34.9007 28.8882 34.9007 31.0669 34.9007 33.2456C34.9007 33.7922 34.822 33.8646 34.2793 33.8646C24.4159 33.8646 14.5524 33.8646 4.68896 33.8646C4.13051 33.8646 4.06758 33.8003 4.06758 33.2134C4.06758 26.9588 4.06758 20.6961 4.06758 14.4415C4.06758 13.8305 4.11477 13.7903 4.72042 13.7903C7.52058 13.7903 10.3207 13.7903 13.1209 13.7983C13.4119 13.7983 13.5613 13.726 13.6793 13.4446C14.0097 12.6487 14.3715 11.8609 14.7255 11.073C14.7805 10.9604 14.812 10.8399 14.867 10.6951C10.4387 10.6951 6.06544 10.6951 1.69217 10.6951C1.69217 19.2088 1.69217 27.6904 1.69217 36.204C1.90454 36.204 2.09332 36.204 2.27423 36.204C6.31714 36.204 10.3601 36.204 14.403 36.204C20.9471 36.204 27.4834 36.2121 34.0276 36.204C36.5289 36.204 38.3694 35.0464 39.5807 32.8114C40.0212 31.9914 40.1313 31.1553 39.9583 30.2228C39.4077 27.3205 36.9615 25.1017 34.0984 24.9891C33.7209 24.9731 33.6107 24.7962 33.6107 24.4344C33.6186 21.2749 33.6186 18.1235 33.6186 14.964C33.6186 14.8113 33.6029 14.6586 33.5871 14.4897C30.2364 14.4897 26.9329 14.4897 23.5664 14.4897C23.9439 15.3339 24.2979 16.1539 24.6676 16.9578C24.7069 17.0382 24.8799 17.0945 24.9901 17.0945C25.5878 17.1106 26.1935 17.1025 26.7991 17.1025C27.0508 17.1025 27.2947 17.1025 27.5464 17.1025C27.7745 17.1106 27.9711 17.1829 27.9711 17.4643C27.9711 17.7296 27.7823 17.7859 27.5621 17.7939C27.4048 17.8019 27.2475 17.7939 27.0902 17.7939C26.4295 17.7939 25.7609 17.7939 25.0608 17.7939C25.108 17.9386 25.1316 18.027 25.1631 18.1155C26.1227 20.2781 27.0744 22.4487 28.0419 24.6113C28.1048 24.756 28.2464 24.8846 28.3801 24.9731C28.8521 25.2866 29.1903 25.6966 29.3161 26.2594C29.5128 27.1598 29.2139 27.8833 28.4981 28.4541C28.7105 28.9365 28.915 29.4108 29.1274 29.8851C29.2217 30.1022 29.2611 30.3192 29.0172 30.4318C28.7734 30.5443 28.624 30.3996 28.5296 30.1745C28.3644 29.7967 28.1756 29.4269 28.034 29.041C27.9397 28.7917 27.8059 28.7435 27.5621 28.7596C26.3036 28.848 25.3833 27.9396 25.3991 26.6372C25.3991 26.4362 25.3597 26.2111 25.2732 26.0262C24.1091 23.3813 22.9371 20.7444 21.7809 18.0994C21.6708 17.8502 21.5528 17.7215 21.2618 17.7457C20.8842 17.7778 20.5067 17.7537 20.1213 17.7537C19.8853 17.7537 19.6886 17.6894 19.6886 17.408C19.6965 17.1266 19.901 17.0704 20.1291 17.0784C20.4988 17.0784 20.8764 17.0784 21.2854 17.0784C21.2303 16.9257 21.1988 16.8211 21.1595 16.7327C20.3258 14.8435 19.492 12.9622 18.6504 11.081C18.5953 10.9604 18.4773 10.872 18.3908 10.7675C18.2964 10.872 18.1549 10.9604 18.0998 11.0891C17.3368 12.7854 16.5817 14.4897 15.8345 16.1941C15.7087 16.4674 15.5907 16.7488 15.457 17.0543C16.3379 17.0543 17.1638 17.0543 18.0369 17.0543C18.0369 16.5398 18.0369 16.0494 18.0369 15.559C18.0369 15.3258 18.0919 15.1088 18.3594 15.1007C18.6583 15.0927 18.7054 15.3258 18.7054 15.575C18.7054 16.2584 18.7054 16.9417 18.7054 17.617C18.7054 18.2039 18.7212 18.7988 18.6897 19.3777C18.6819 19.5063 18.4773 19.6188 18.3672 19.7394C18.265 19.6269 18.1234 19.5224 18.0605 19.3857C18.0054 19.2731 18.0447 19.1204 18.0447 18.9918C18.0447 18.5818 18.0447 18.1718 18.0447 17.7537C17.1481 17.7537 16.33 17.7617 15.5042 17.7457C15.2446 17.7376 15.1109 17.818 15.0008 18.0672C13.8288 20.7444 12.6332 23.4215 11.4534 26.0986C11.3983 26.2272 11.359 26.3799 11.359 26.5166C11.4298 27.8833 10.5095 28.84 9.15662 28.7516C8.92852 28.7355 8.82626 28.7998 8.73974 29.0008C8.58243 29.3867 8.40939 29.7565 8.24421 30.1343C8.14196 30.3675 8.00038 30.5443 7.73295 30.4157C7.48911 30.2951 7.52844 30.078 7.62283 29.861C7.79587 29.4831 7.94532 29.1053 8.13409 28.7355C8.24421 28.5184 8.20488 28.3978 8.03184 28.229C7.06437 27.3045 7.19809 25.8493 8.2914 25.0936C8.47231 24.965 8.64536 24.7721 8.73188 24.5711C9.68361 22.4487 10.6275 20.3183 11.5635 18.1878C11.6185 18.0592 11.6657 17.9225 11.7365 17.7537C10.9657 17.7537 10.2499 17.7537 9.5263 17.7537C9.29033 17.7537 9.09369 17.6894 9.09369 17.4161C9.09369 17.1347 9.30607 17.0784 9.53417 17.0864C10.1398 17.0864 10.7455 17.0382 11.3354 17.1025C11.9017 17.1588 12.177 16.9578 12.3658 16.4192C12.586 15.776 12.9085 15.157 13.1917 14.5058C10.3365 14.5058 7.54417 14.5058 4.73616 14.5058C4.74402 20.7202 4.74402 26.9266 4.74402 33.1491ZM40.2493 28.7998C40.2493 28.1486 40.2493 27.618 40.2493 27.0874C40.2493 21.6608 40.2493 16.2343 40.2493 10.8077C40.2493 8.7657 39.5021 7.06136 37.984 5.72682C37.8818 5.63839 37.7716 5.56603 37.5986 5.44544C37.5986 5.69466 37.5986 5.84741 37.5986 6.0082C37.5986 8.06628 37.5986 10.1244 37.5986 12.1824C37.5986 12.3271 37.6143 12.496 37.5593 12.6166C37.5042 12.7211 37.3469 12.8417 37.2446 12.8417C37.1424 12.8336 37.0087 12.6969 36.9615 12.5844C36.9064 12.4718 36.9379 12.3191 36.9379 12.1905C36.9379 10.1163 36.9379 8.0502 36.9379 5.97604C36.9379 4.89073 36.9458 4.87465 35.9232 4.56111C35.412 4.40837 34.8771 4.32797 34.3265 4.21542C34.3265 10.9926 34.3265 17.6412 34.3265 24.2897C37.1267 24.6032 39.0301 26.1468 40.2493 28.7998ZM33.5793 13.7742C33.5872 13.6215 33.6029 13.4928 33.6029 13.3642C33.6029 12.6166 33.5871 11.8689 33.6107 11.1212C33.6265 10.7514 33.5006 10.6469 33.1467 10.6469C29.5364 10.655 25.9339 10.655 22.3236 10.655C22.1899 10.655 22.0562 10.671 21.8753 10.6871C22.3 11.6438 22.7012 12.5362 23.0787 13.4446C23.1967 13.726 23.3461 13.7983 23.6372 13.7983C26.8149 13.7903 29.9847 13.7903 33.1624 13.7903C33.2961 13.7903 33.422 13.7823 33.5793 13.7742ZM11.0129 25.4313C13.1759 20.5434 15.3626 15.6152 17.5335 10.7193C16.9986 10.4218 16.5109 10.1404 15.9997 9.85101C13.813 14.7872 11.6107 19.7555 9.44765 24.6354C9.99037 24.9168 10.4859 25.166 11.0129 25.4313ZM19.2403 10.7193C21.4112 15.6152 23.59 20.5353 25.7373 25.3831C26.2564 25.1097 26.7519 24.8444 27.2868 24.563C25.1316 19.6992 22.945 14.7631 20.7741 9.85905C20.2471 10.1565 19.7673 10.4218 19.2403 10.7193ZM18.3908 10.06C19.9167 10.06 21.128 8.83002 21.1359 7.27038C21.1438 5.7027 19.901 4.43248 18.3751 4.44856C16.8728 4.4566 15.63 5.73486 15.6379 7.27038C15.6379 8.8059 16.8649 10.06 18.3908 10.06ZM28.7183 26.7256C28.7105 25.986 28.1127 25.375 27.3891 25.3831C26.6497 25.3831 26.0598 26.0101 26.0676 26.7739C26.0834 27.5296 26.6654 28.1004 27.4127 28.0923C28.1442 28.0762 28.7183 27.4733 28.7183 26.7256ZM9.38472 28.0843C10.1162 28.0843 10.6904 27.5055 10.6983 26.7739C10.7061 26.0503 10.0926 25.4393 9.35326 25.4474C8.63749 25.4554 8.05544 26.0664 8.0633 26.7819C8.07117 27.5135 8.66109 28.0923 9.38472 28.0843ZM18.8234 3.74914C18.8234 3.20246 18.8234 2.71206 18.8234 2.21362C18.8234 1.94028 18.7526 1.73126 18.4537 1.6991C18.1313 1.66694 17.8717 1.83577 17.8481 2.13323C17.8009 2.67186 17.8324 3.2105 17.8324 3.7411C18.1863 3.74914 18.4852 3.74914 18.8234 3.74914Z"></path>
                      </mask>
                      <path
                        d="M18.1785 36.8954C12.7119 36.8954 7.24528 36.8954 1.77869 36.8954C1.01573 36.8954 1 36.8793 1 36.1236C1 27.6582 1 19.2008 1 10.7353C1 9.97964 1.01573 9.96357 1.73937 9.96357C6.0969 9.96357 10.4544 9.96357 14.8041 9.96357C15.3154 9.96357 15.6379 9.42493 15.394 8.95865C14.458 7.14175 15.0794 5.10779 16.8649 4.13503C17.0694 4.02248 17.1402 3.89385 17.1402 3.66875C17.1402 3.14619 17.1166 2.62363 17.1717 2.10911C17.266 1.24086 18.2414 0.726338 18.9493 1.15242C19.2875 1.35341 19.4841 1.6589 19.4841 2.06891C19.492 2.59147 19.4684 3.11403 19.4999 3.62855C19.5077 3.77326 19.6257 3.97424 19.7516 4.03856C21.6708 5.01132 22.3158 7.03724 21.3326 9.00688C21.128 9.40885 21.4505 9.95553 21.891 9.95553C25.6586 9.95553 29.4262 9.95553 33.1939 9.96357C33.5321 9.96357 33.6107 9.85101 33.6029 9.52944C33.5871 7.75274 33.595 5.97604 33.595 4.1913C33.595 3.60443 33.6973 3.50796 34.2636 3.54012C38.0233 3.75718 40.8943 6.86037 40.8943 10.7112C40.8943 17.1025 40.8943 23.4938 40.8943 29.8851C40.8943 33.2375 38.7627 35.9789 35.5771 36.7105C34.9715 36.8472 34.3344 36.8793 33.7051 36.8874C28.5374 36.9035 23.3619 36.8954 18.1785 36.8954ZM4.74402 33.1491C14.5917 33.1491 24.3923 33.1491 34.2164 33.1491C34.2164 32.9481 34.2164 32.7873 34.2164 32.6265C34.2164 30.689 34.2164 28.7516 34.2164 26.806C34.2164 26.6613 34.1928 26.4925 34.2557 26.3719C34.3108 26.2674 34.4602 26.1388 34.5703 26.1468C34.6726 26.1468 34.7985 26.2835 34.8692 26.396C34.9164 26.4764 34.9007 26.605 34.9007 26.7096C34.9007 28.8882 34.9007 31.0669 34.9007 33.2456C34.9007 33.7922 34.822 33.8646 34.2793 33.8646C24.4159 33.8646 14.5524 33.8646 4.68896 33.8646C4.13051 33.8646 4.06758 33.8003 4.06758 33.2134C4.06758 26.9588 4.06758 20.6961 4.06758 14.4415C4.06758 13.8305 4.11477 13.7903 4.72042 13.7903C7.52058 13.7903 10.3207 13.7903 13.1209 13.7983C13.4119 13.7983 13.5613 13.726 13.6793 13.4446C14.0097 12.6487 14.3715 11.8609 14.7255 11.073C14.7805 10.9604 14.812 10.8399 14.867 10.6951C10.4387 10.6951 6.06544 10.6951 1.69217 10.6951C1.69217 19.2088 1.69217 27.6904 1.69217 36.204C1.90454 36.204 2.09332 36.204 2.27423 36.204C6.31714 36.204 10.3601 36.204 14.403 36.204C20.9471 36.204 27.4834 36.2121 34.0276 36.204C36.5289 36.204 38.3694 35.0464 39.5807 32.8114C40.0212 31.9914 40.1313 31.1553 39.9583 30.2228C39.4077 27.3205 36.9615 25.1017 34.0984 24.9891C33.7209 24.9731 33.6107 24.7962 33.6107 24.4344C33.6186 21.2749 33.6186 18.1235 33.6186 14.964C33.6186 14.8113 33.6029 14.6586 33.5871 14.4897C30.2364 14.4897 26.9329 14.4897 23.5664 14.4897C23.9439 15.3339 24.2979 16.1539 24.6676 16.9578C24.7069 17.0382 24.8799 17.0945 24.9901 17.0945C25.5878 17.1106 26.1935 17.1025 26.7991 17.1025C27.0508 17.1025 27.2947 17.1025 27.5464 17.1025C27.7745 17.1106 27.9711 17.1829 27.9711 17.4643C27.9711 17.7296 27.7823 17.7859 27.5621 17.7939C27.4048 17.8019 27.2475 17.7939 27.0902 17.7939C26.4295 17.7939 25.7609 17.7939 25.0608 17.7939C25.108 17.9386 25.1316 18.027 25.1631 18.1155C26.1227 20.2781 27.0744 22.4487 28.0419 24.6113C28.1048 24.756 28.2464 24.8846 28.3801 24.9731C28.8521 25.2866 29.1903 25.6966 29.3161 26.2594C29.5128 27.1598 29.2139 27.8833 28.4981 28.4541C28.7105 28.9365 28.915 29.4108 29.1274 29.8851C29.2217 30.1022 29.2611 30.3192 29.0172 30.4318C28.7734 30.5443 28.624 30.3996 28.5296 30.1745C28.3644 29.7967 28.1756 29.4269 28.034 29.041C27.9397 28.7917 27.8059 28.7435 27.5621 28.7596C26.3036 28.848 25.3833 27.9396 25.3991 26.6372C25.3991 26.4362 25.3597 26.2111 25.2732 26.0262C24.1091 23.3813 22.9371 20.7444 21.7809 18.0994C21.6708 17.8502 21.5528 17.7215 21.2618 17.7457C20.8842 17.7778 20.5067 17.7537 20.1213 17.7537C19.8853 17.7537 19.6886 17.6894 19.6886 17.408C19.6965 17.1266 19.901 17.0704 20.1291 17.0784C20.4988 17.0784 20.8764 17.0784 21.2854 17.0784C21.2303 16.9257 21.1988 16.8211 21.1595 16.7327C20.3258 14.8435 19.492 12.9622 18.6504 11.081C18.5953 10.9604 18.4773 10.872 18.3908 10.7675C18.2964 10.872 18.1549 10.9604 18.0998 11.0891C17.3368 12.7854 16.5817 14.4897 15.8345 16.1941C15.7087 16.4674 15.5907 16.7488 15.457 17.0543C16.3379 17.0543 17.1638 17.0543 18.0369 17.0543C18.0369 16.5398 18.0369 16.0494 18.0369 15.559C18.0369 15.3258 18.0919 15.1088 18.3594 15.1007C18.6583 15.0927 18.7054 15.3258 18.7054 15.575C18.7054 16.2584 18.7054 16.9417 18.7054 17.617C18.7054 18.2039 18.7212 18.7988 18.6897 19.3777C18.6819 19.5063 18.4773 19.6188 18.3672 19.7394C18.265 19.6269 18.1234 19.5224 18.0605 19.3857C18.0054 19.2731 18.0447 19.1204 18.0447 18.9918C18.0447 18.5818 18.0447 18.1718 18.0447 17.7537C17.1481 17.7537 16.33 17.7617 15.5042 17.7457C15.2446 17.7376 15.1109 17.818 15.0008 18.0672C13.8288 20.7444 12.6332 23.4215 11.4534 26.0986C11.3983 26.2272 11.359 26.3799 11.359 26.5166C11.4298 27.8833 10.5095 28.84 9.15662 28.7516C8.92852 28.7355 8.82626 28.7998 8.73974 29.0008C8.58243 29.3867 8.40939 29.7565 8.24421 30.1343C8.14196 30.3675 8.00038 30.5443 7.73295 30.4157C7.48911 30.2951 7.52844 30.078 7.62283 29.861C7.79587 29.4831 7.94532 29.1053 8.13409 28.7355C8.24421 28.5184 8.20488 28.3978 8.03184 28.229C7.06437 27.3045 7.19809 25.8493 8.2914 25.0936C8.47231 24.965 8.64536 24.7721 8.73188 24.5711C9.68361 22.4487 10.6275 20.3183 11.5635 18.1878C11.6185 18.0592 11.6657 17.9225 11.7365 17.7537C10.9657 17.7537 10.2499 17.7537 9.5263 17.7537C9.29033 17.7537 9.09369 17.6894 9.09369 17.4161C9.09369 17.1347 9.30607 17.0784 9.53417 17.0864C10.1398 17.0864 10.7455 17.0382 11.3354 17.1025C11.9017 17.1588 12.177 16.9578 12.3658 16.4192C12.586 15.776 12.9085 15.157 13.1917 14.5058C10.3365 14.5058 7.54417 14.5058 4.73616 14.5058C4.74402 20.7202 4.74402 26.9266 4.74402 33.1491ZM40.2493 28.7998C40.2493 28.1486 40.2493 27.618 40.2493 27.0874C40.2493 21.6608 40.2493 16.2343 40.2493 10.8077C40.2493 8.7657 39.5021 7.06136 37.984 5.72682C37.8818 5.63839 37.7716 5.56603 37.5986 5.44544C37.5986 5.69466 37.5986 5.84741 37.5986 6.0082C37.5986 8.06628 37.5986 10.1244 37.5986 12.1824C37.5986 12.3271 37.6143 12.496 37.5593 12.6166C37.5042 12.7211 37.3469 12.8417 37.2446 12.8417C37.1424 12.8336 37.0087 12.6969 36.9615 12.5844C36.9064 12.4718 36.9379 12.3191 36.9379 12.1905C36.9379 10.1163 36.9379 8.0502 36.9379 5.97604C36.9379 4.89073 36.9458 4.87465 35.9232 4.56111C35.412 4.40837 34.8771 4.32797 34.3265 4.21542C34.3265 10.9926 34.3265 17.6412 34.3265 24.2897C37.1267 24.6032 39.0301 26.1468 40.2493 28.7998ZM33.5793 13.7742C33.5872 13.6215 33.6029 13.4928 33.6029 13.3642C33.6029 12.6166 33.5871 11.8689 33.6107 11.1212C33.6265 10.7514 33.5006 10.6469 33.1467 10.6469C29.5364 10.655 25.9339 10.655 22.3236 10.655C22.1899 10.655 22.0562 10.671 21.8753 10.6871C22.3 11.6438 22.7012 12.5362 23.0787 13.4446C23.1967 13.726 23.3461 13.7983 23.6372 13.7983C26.8149 13.7903 29.9847 13.7903 33.1624 13.7903C33.2961 13.7903 33.422 13.7823 33.5793 13.7742ZM11.0129 25.4313C13.1759 20.5434 15.3626 15.6152 17.5335 10.7193C16.9986 10.4218 16.5109 10.1404 15.9997 9.85101C13.813 14.7872 11.6107 19.7555 9.44765 24.6354C9.99037 24.9168 10.4859 25.166 11.0129 25.4313ZM19.2403 10.7193C21.4112 15.6152 23.59 20.5353 25.7373 25.3831C26.2564 25.1097 26.7519 24.8444 27.2868 24.563C25.1316 19.6992 22.945 14.7631 20.7741 9.85905C20.2471 10.1565 19.7673 10.4218 19.2403 10.7193ZM18.3908 10.06C19.9167 10.06 21.128 8.83002 21.1359 7.27038C21.1438 5.7027 19.901 4.43248 18.3751 4.44856C16.8728 4.4566 15.63 5.73486 15.6379 7.27038C15.6379 8.8059 16.8649 10.06 18.3908 10.06ZM28.7183 26.7256C28.7105 25.986 28.1127 25.375 27.3891 25.3831C26.6497 25.3831 26.0598 26.0101 26.0676 26.7739C26.0834 27.5296 26.6654 28.1004 27.4127 28.0923C28.1442 28.0762 28.7183 27.4733 28.7183 26.7256ZM9.38472 28.0843C10.1162 28.0843 10.6904 27.5055 10.6983 26.7739C10.7061 26.0503 10.0926 25.4393 9.35326 25.4474C8.63749 25.4554 8.05544 26.0664 8.0633 26.7819C8.07117 27.5135 8.66109 28.0923 9.38472 28.0843ZM18.8234 3.74914C18.8234 3.20246 18.8234 2.71206 18.8234 2.21362C18.8234 1.94028 18.7526 1.73126 18.4537 1.6991C18.1313 1.66694 17.8717 1.83577 17.8481 2.13323C17.8009 2.67186 17.8324 3.2105 17.8324 3.7411C18.1863 3.74914 18.4852 3.74914 18.8234 3.74914Z"
                        fill="#666666"
                      ></path>
                      <path
                        d="M18.1785 36.8954C12.7119 36.8954 7.24528 36.8954 1.77869 36.8954C1.01573 36.8954 1 36.8793 1 36.1236C1 27.6582 1 19.2008 1 10.7353C1 9.97964 1.01573 9.96357 1.73937 9.96357C6.0969 9.96357 10.4544 9.96357 14.8041 9.96357C15.3154 9.96357 15.6379 9.42493 15.394 8.95865C14.458 7.14175 15.0794 5.10779 16.8649 4.13503C17.0694 4.02248 17.1402 3.89385 17.1402 3.66875C17.1402 3.14619 17.1166 2.62363 17.1717 2.10911C17.266 1.24086 18.2414 0.726338 18.9493 1.15242C19.2875 1.35341 19.4841 1.6589 19.4841 2.06891C19.492 2.59147 19.4684 3.11403 19.4999 3.62855C19.5077 3.77326 19.6257 3.97424 19.7516 4.03856C21.6708 5.01132 22.3158 7.03724 21.3326 9.00688C21.128 9.40885 21.4505 9.95553 21.891 9.95553C25.6586 9.95553 29.4262 9.95553 33.1939 9.96357C33.5321 9.96357 33.6107 9.85101 33.6029 9.52944C33.5871 7.75274 33.595 5.97604 33.595 4.1913C33.595 3.60443 33.6973 3.50796 34.2636 3.54012C38.0233 3.75718 40.8943 6.86037 40.8943 10.7112C40.8943 17.1025 40.8943 23.4938 40.8943 29.8851C40.8943 33.2375 38.7627 35.9789 35.5771 36.7105C34.9715 36.8472 34.3344 36.8793 33.7051 36.8874C28.5374 36.9035 23.3619 36.8954 18.1785 36.8954ZM4.74402 33.1491C14.5917 33.1491 24.3923 33.1491 34.2164 33.1491C34.2164 32.9481 34.2164 32.7873 34.2164 32.6265C34.2164 30.689 34.2164 28.7516 34.2164 26.806C34.2164 26.6613 34.1928 26.4925 34.2557 26.3719C34.3108 26.2674 34.4602 26.1388 34.5703 26.1468C34.6726 26.1468 34.7985 26.2835 34.8692 26.396C34.9164 26.4764 34.9007 26.605 34.9007 26.7096C34.9007 28.8882 34.9007 31.0669 34.9007 33.2456C34.9007 33.7922 34.822 33.8646 34.2793 33.8646C24.4159 33.8646 14.5524 33.8646 4.68896 33.8646C4.13051 33.8646 4.06758 33.8003 4.06758 33.2134C4.06758 26.9588 4.06758 20.6961 4.06758 14.4415C4.06758 13.8305 4.11477 13.7903 4.72042 13.7903C7.52058 13.7903 10.3207 13.7903 13.1209 13.7983C13.4119 13.7983 13.5613 13.726 13.6793 13.4446C14.0097 12.6487 14.3715 11.8609 14.7255 11.073C14.7805 10.9604 14.812 10.8399 14.867 10.6951C10.4387 10.6951 6.06544 10.6951 1.69217 10.6951C1.69217 19.2088 1.69217 27.6904 1.69217 36.204C1.90454 36.204 2.09332 36.204 2.27423 36.204C6.31714 36.204 10.3601 36.204 14.403 36.204C20.9471 36.204 27.4834 36.2121 34.0276 36.204C36.5289 36.204 38.3694 35.0464 39.5807 32.8114C40.0212 31.9914 40.1313 31.1553 39.9583 30.2228C39.4077 27.3205 36.9615 25.1017 34.0984 24.9891C33.7209 24.9731 33.6107 24.7962 33.6107 24.4344C33.6186 21.2749 33.6186 18.1235 33.6186 14.964C33.6186 14.8113 33.6029 14.6586 33.5871 14.4897C30.2364 14.4897 26.9329 14.4897 23.5664 14.4897C23.9439 15.3339 24.2979 16.1539 24.6676 16.9578C24.7069 17.0382 24.8799 17.0945 24.9901 17.0945C25.5878 17.1106 26.1935 17.1025 26.7991 17.1025C27.0508 17.1025 27.2947 17.1025 27.5464 17.1025C27.7745 17.1106 27.9711 17.1829 27.9711 17.4643C27.9711 17.7296 27.7823 17.7859 27.5621 17.7939C27.4048 17.8019 27.2475 17.7939 27.0902 17.7939C26.4295 17.7939 25.7609 17.7939 25.0608 17.7939C25.108 17.9386 25.1316 18.027 25.1631 18.1155C26.1227 20.2781 27.0744 22.4487 28.0419 24.6113C28.1048 24.756 28.2464 24.8846 28.3801 24.9731C28.8521 25.2866 29.1903 25.6966 29.3161 26.2594C29.5128 27.1598 29.2139 27.8833 28.4981 28.4541C28.7105 28.9365 28.915 29.4108 29.1274 29.8851C29.2217 30.1022 29.2611 30.3192 29.0172 30.4318C28.7734 30.5443 28.624 30.3996 28.5296 30.1745C28.3644 29.7967 28.1756 29.4269 28.034 29.041C27.9397 28.7917 27.8059 28.7435 27.5621 28.7596C26.3036 28.848 25.3833 27.9396 25.3991 26.6372C25.3991 26.4362 25.3597 26.2111 25.2732 26.0262C24.1091 23.3813 22.9371 20.7444 21.7809 18.0994C21.6708 17.8502 21.5528 17.7215 21.2618 17.7457C20.8842 17.7778 20.5067 17.7537 20.1213 17.7537C19.8853 17.7537 19.6886 17.6894 19.6886 17.408C19.6965 17.1266 19.901 17.0704 20.1291 17.0784C20.4988 17.0784 20.8764 17.0784 21.2854 17.0784C21.2303 16.9257 21.1988 16.8211 21.1595 16.7327C20.3258 14.8435 19.492 12.9622 18.6504 11.081C18.5953 10.9604 18.4773 10.872 18.3908 10.7675C18.2964 10.872 18.1549 10.9604 18.0998 11.0891C17.3368 12.7854 16.5817 14.4897 15.8345 16.1941C15.7087 16.4674 15.5907 16.7488 15.457 17.0543C16.3379 17.0543 17.1638 17.0543 18.0369 17.0543C18.0369 16.5398 18.0369 16.0494 18.0369 15.559C18.0369 15.3258 18.0919 15.1088 18.3594 15.1007C18.6583 15.0927 18.7054 15.3258 18.7054 15.575C18.7054 16.2584 18.7054 16.9417 18.7054 17.617C18.7054 18.2039 18.7212 18.7988 18.6897 19.3777C18.6819 19.5063 18.4773 19.6188 18.3672 19.7394C18.265 19.6269 18.1234 19.5224 18.0605 19.3857C18.0054 19.2731 18.0447 19.1204 18.0447 18.9918C18.0447 18.5818 18.0447 18.1718 18.0447 17.7537C17.1481 17.7537 16.33 17.7617 15.5042 17.7457C15.2446 17.7376 15.1109 17.818 15.0008 18.0672C13.8288 20.7444 12.6332 23.4215 11.4534 26.0986C11.3983 26.2272 11.359 26.3799 11.359 26.5166C11.4298 27.8833 10.5095 28.84 9.15662 28.7516C8.92852 28.7355 8.82626 28.7998 8.73974 29.0008C8.58243 29.3867 8.40939 29.7565 8.24421 30.1343C8.14196 30.3675 8.00038 30.5443 7.73295 30.4157C7.48911 30.2951 7.52844 30.078 7.62283 29.861C7.79587 29.4831 7.94532 29.1053 8.13409 28.7355C8.24421 28.5184 8.20488 28.3978 8.03184 28.229C7.06437 27.3045 7.19809 25.8493 8.2914 25.0936C8.47231 24.965 8.64536 24.7721 8.73188 24.5711C9.68361 22.4487 10.6275 20.3183 11.5635 18.1878C11.6185 18.0592 11.6657 17.9225 11.7365 17.7537C10.9657 17.7537 10.2499 17.7537 9.5263 17.7537C9.29033 17.7537 9.09369 17.6894 9.09369 17.4161C9.09369 17.1347 9.30607 17.0784 9.53417 17.0864C10.1398 17.0864 10.7455 17.0382 11.3354 17.1025C11.9017 17.1588 12.177 16.9578 12.3658 16.4192C12.586 15.776 12.9085 15.157 13.1917 14.5058C10.3365 14.5058 7.54417 14.5058 4.73616 14.5058C4.74402 20.7202 4.74402 26.9266 4.74402 33.1491ZM40.2493 28.7998C40.2493 28.1486 40.2493 27.618 40.2493 27.0874C40.2493 21.6608 40.2493 16.2343 40.2493 10.8077C40.2493 8.7657 39.5021 7.06136 37.984 5.72682C37.8818 5.63839 37.7716 5.56603 37.5986 5.44544C37.5986 5.69466 37.5986 5.84741 37.5986 6.0082C37.5986 8.06628 37.5986 10.1244 37.5986 12.1824C37.5986 12.3271 37.6143 12.496 37.5593 12.6166C37.5042 12.7211 37.3469 12.8417 37.2446 12.8417C37.1424 12.8336 37.0087 12.6969 36.9615 12.5844C36.9064 12.4718 36.9379 12.3191 36.9379 12.1905C36.9379 10.1163 36.9379 8.0502 36.9379 5.97604C36.9379 4.89073 36.9458 4.87465 35.9232 4.56111C35.412 4.40837 34.8771 4.32797 34.3265 4.21542C34.3265 10.9926 34.3265 17.6412 34.3265 24.2897C37.1267 24.6032 39.0301 26.1468 40.2493 28.7998ZM33.5793 13.7742C33.5872 13.6215 33.6029 13.4928 33.6029 13.3642C33.6029 12.6166 33.5871 11.8689 33.6107 11.1212C33.6265 10.7514 33.5006 10.6469 33.1467 10.6469C29.5364 10.655 25.9339 10.655 22.3236 10.655C22.1899 10.655 22.0562 10.671 21.8753 10.6871C22.3 11.6438 22.7012 12.5362 23.0787 13.4446C23.1967 13.726 23.3461 13.7983 23.6372 13.7983C26.8149 13.7903 29.9847 13.7903 33.1624 13.7903C33.2961 13.7903 33.422 13.7823 33.5793 13.7742ZM11.0129 25.4313C13.1759 20.5434 15.3626 15.6152 17.5335 10.7193C16.9986 10.4218 16.5109 10.1404 15.9997 9.85101C13.813 14.7872 11.6107 19.7555 9.44765 24.6354C9.99037 24.9168 10.4859 25.166 11.0129 25.4313ZM19.2403 10.7193C21.4112 15.6152 23.59 20.5353 25.7373 25.3831C26.2564 25.1097 26.7519 24.8444 27.2868 24.563C25.1316 19.6992 22.945 14.7631 20.7741 9.85905C20.2471 10.1565 19.7673 10.4218 19.2403 10.7193ZM18.3908 10.06C19.9167 10.06 21.128 8.83002 21.1359 7.27038C21.1438 5.7027 19.901 4.43248 18.3751 4.44856C16.8728 4.4566 15.63 5.73486 15.6379 7.27038C15.6379 8.8059 16.8649 10.06 18.3908 10.06ZM28.7183 26.7256C28.7105 25.986 28.1127 25.375 27.3891 25.3831C26.6497 25.3831 26.0598 26.0101 26.0676 26.7739C26.0834 27.5296 26.6654 28.1004 27.4127 28.0923C28.1442 28.0762 28.7183 27.4733 28.7183 26.7256ZM9.38472 28.0843C10.1162 28.0843 10.6904 27.5055 10.6983 26.7739C10.7061 26.0503 10.0926 25.4393 9.35326 25.4474C8.63749 25.4554 8.05544 26.0664 8.0633 26.7819C8.07117 27.5135 8.66109 28.0923 9.38472 28.0843ZM18.8234 3.74914C18.8234 3.20246 18.8234 2.71206 18.8234 2.21362C18.8234 1.94028 18.7526 1.73126 18.4537 1.6991C18.1313 1.66694 17.8717 1.83577 17.8481 2.13323C17.8009 2.67186 17.8324 3.2105 17.8324 3.7411C18.1863 3.74914 18.4852 3.74914 18.8234 3.74914Z"
                        stroke="#666666"
                        strokeWidth="0.4"
                        mask="url(#path-1-outside-1_7869_2283)"
                      ></path>
                      <path
                        d="M20.9714 26.7676L21.0496 26.6877C21.075 26.6618 21.1012 26.6298 21.1298 26.5933C21.1368 26.5844 21.1441 26.5751 21.1515 26.5655C21.173 26.5379 21.1958 26.5085 21.2184 26.4815C21.249 26.445 21.2833 26.4075 21.321 26.3775C21.3585 26.3478 21.4058 26.32 21.4624 26.3128L21.4673 26.3122L21.4673 26.3123C21.9914 26.2717 22.5234 26.2717 23.0474 26.3122C23.0476 26.3123 23.0478 26.3123 23.048 26.3123L23.0403 26.412L20.9714 26.7676ZM20.9714 26.7676L21.0595 26.8365C21.0992 26.8675 21.1337 26.9005 21.1716 26.9366C21.1951 26.9591 21.2199 26.9828 21.248 27.008C21.313 27.0662 21.3938 27.1299 21.4908 27.1523L20.9714 26.7676Z"
                        fill="#666666"
                        stroke="#666666"
                        strokeWidth="0.2"
                      ></path>
                      <path
                        d="M18.6656 27.172V27.1721L18.6686 27.172C18.7548 27.1694 18.8403 27.1719 18.9294 27.1745C18.9758 27.1759 19.0232 27.1773 19.0722 27.178C19.2096 27.1801 19.3532 27.1763 19.4932 27.1464C19.5877 27.1325 19.6821 27.0644 19.7473 26.9988C19.7825 26.9634 19.8146 26.9234 19.8386 26.8825C19.8613 26.8438 19.8825 26.7943 19.8825 26.7424C19.8825 26.6896 19.8636 26.6379 19.8413 26.595C19.8182 26.5506 19.7871 26.5072 19.753 26.4689C19.719 26.4307 19.6799 26.3951 19.6393 26.3678C19.6007 26.3418 19.5515 26.3169 19.4988 26.3131L19.4988 26.313L19.4975 26.313C18.9587 26.2806 18.4198 26.2806 17.8809 26.313L17.8809 26.313L17.8797 26.3131C17.8232 26.3172 17.7769 26.3451 17.7426 26.3729C17.7077 26.4013 17.676 26.437 17.6481 26.4713C17.6287 26.4952 17.6086 26.5216 17.5897 26.5465C17.5818 26.5569 17.574 26.5671 17.5666 26.5768C17.5401 26.6111 17.5161 26.6408 17.493 26.6644L17.4222 26.7368L17.4954 26.8067C17.5215 26.8316 17.5481 26.8609 17.5769 26.8937C17.5823 26.8998 17.5878 26.906 17.5934 26.9124C17.6168 26.9391 17.6417 26.9675 17.6668 26.9941C17.7265 27.0571 17.805 27.1296 17.9029 27.1532L17.9031 27.1532C18.0336 27.1843 18.1677 27.1881 18.2954 27.1851C18.3529 27.1837 18.4061 27.1811 18.4579 27.1786C18.5278 27.1752 18.5949 27.172 18.6656 27.172ZM18.6656 27.072C18.5943 27.072 18.5216 27.0755 18.4485 27.0789C18.2719 27.0873 18.0932 27.0957 17.9263 27.0559C17.8326 27.0334 17.7505 26.9398 17.6691 26.8471C17.6392 26.813 17.6095 26.7791 17.5793 26.7489L18.6656 27.072ZM17.5746 26.7237C17.6071 26.6889 17.6389 26.647 17.6705 26.6054C17.7423 26.511 17.8128 26.4182 17.8869 26.4128C18.4218 26.3806 18.9567 26.3806 19.4915 26.4128L17.5746 26.7237Z"
                        fill="#666666"
                        stroke="#666666"
                        strokeWidth="0.2"
                      ></path>
                      <path
                        d="M14.2858 26.3123C14.2304 26.3163 14.1818 26.3437 14.1449 26.3721C14.1063 26.4018 14.0707 26.44 14.0403 26.4804C13.9811 26.5588 13.9291 26.6619 13.9185 26.7543L13.9185 26.7543L13.9183 26.756C13.9128 26.812 13.9401 26.8631 13.9609 26.8948C13.9848 26.9315 14.0171 26.9679 14.0516 27.0004C14.1171 27.0619 14.2104 27.1274 14.2967 27.1451L14.2967 27.1451L14.2979 27.1453C14.4337 27.1713 14.5714 27.1753 14.7046 27.1732C14.7659 27.1723 14.8231 27.1702 14.879 27.1682C14.9511 27.1657 15.0212 27.1632 15.0954 27.1632C15.1759 27.1632 15.252 27.1665 15.3301 27.1699C15.3865 27.1724 15.444 27.1749 15.5052 27.1762C15.6444 27.1793 15.7887 27.1754 15.9332 27.1451M14.2858 26.3123C14.8334 26.2717 15.3889 26.2717 15.9443 26.3122C15.998 26.3162 16.0476 26.3423 16.0859 26.3689C16.1264 26.3969 16.1653 26.4332 16.199 26.4717C16.2328 26.5103 16.2637 26.5536 16.2866 26.5972C16.3084 26.6388 16.328 26.6899 16.328 26.7416C16.328 26.7949 16.3052 26.8446 16.2815 26.8828C16.2565 26.9231 16.2231 26.9622 16.1871 26.9967C16.1185 27.0624 16.0234 27.1275 15.9332 27.1451M14.2858 26.3123C14.2858 26.3123 14.2858 26.3123 14.2858 26.3122L14.2931 26.412M14.2858 26.3123C14.2858 26.3123 14.2857 26.3123 14.2857 26.3123L14.2931 26.412M15.9332 27.1451C15.9329 27.1452 15.9326 27.1452 15.9322 27.1453L15.9134 27.0471M15.9332 27.1451C15.9335 27.1451 15.9338 27.145 15.934 27.1449L15.9134 27.0471M15.9134 27.0471C15.7248 27.0868 15.5324 27.0785 15.3387 27.0702C15.2577 27.0667 15.1766 27.0632 15.0954 27.0632C15.0213 27.0632 14.9466 27.0658 14.8718 27.0684C14.6845 27.075 14.4966 27.0816 14.3167 27.0471M15.9134 27.0471C16.0393 27.023 16.228 26.8461 16.228 26.7416C16.228 26.629 16.0471 26.42 15.937 26.412C15.3864 26.3718 14.8358 26.3718 14.2931 26.412M14.3167 27.0471L14.2931 26.412M14.3167 27.0471C14.1987 27.023 14.01 26.8461 14.0178 26.7657L14.3167 27.0471Z"
                        fill="#666666"
                        stroke="#666666"
                        strokeWidth="0.2"
                      ></path>
                      <path
                        d="M37.2716 18.4859L37.2716 18.4858C37.1955 18.5009 37.1246 18.4968 37.0616 18.4705C36.9984 18.4441 36.9518 18.3989 36.9188 18.3466C36.8555 18.2462 36.8375 18.1126 36.8375 17.9938C36.8375 17.8081 36.8365 17.6219 36.8356 17.4354C36.8326 16.8741 36.8296 16.31 36.8533 15.7466L36.8534 15.7454L36.8534 15.7454C36.8595 15.6327 36.9365 15.5405 37.0012 15.4734C37.0292 15.4444 37.0597 15.4154 37.0884 15.3882C37.0949 15.3819 37.1014 15.3758 37.1077 15.3698C37.1427 15.3364 37.174 15.3057 37.2001 15.2755L37.2784 15.1847L37.3536 15.2781C37.378 15.3083 37.4075 15.3395 37.4409 15.3739C37.4465 15.3797 37.4522 15.3855 37.458 15.3915C37.4858 15.42 37.5155 15.4504 37.543 15.4812C37.6067 15.5524 37.6783 15.6456 37.6898 15.7564M37.2716 18.4859L37.6898 15.7567C37.6898 15.7566 37.6898 15.7565 37.6898 15.7564M37.2716 18.4859L37.2755 18.485C37.3727 18.4616 37.4685 18.3824 37.5374 18.3022C37.6066 18.2216 37.6705 18.1149 37.6818 18.0137M37.2716 18.4859L37.6818 18.0137M37.6898 15.7564C37.7177 16.0131 37.7108 16.282 37.7041 16.5453C37.7011 16.6598 37.6982 16.7734 37.6982 16.8844C37.6982 16.9845 37.7007 17.0874 37.7032 17.192C37.7097 17.4613 37.7165 17.7415 37.6818 18.0137M37.6898 15.7564L37.6818 18.0137"
                        fill="#666666"
                        stroke="#666666"
                        strokeWidth="0.2"
                      ></path>
                      <path
                        d="M17.2673 7.27175L17.2673 7.27177C17.2759 7.8793 17.7748 8.38331 18.3741 8.38331C18.9723 8.38331 19.4805 7.87212 19.4809 7.27106C19.4891 6.64384 18.9711 6.13249 18.3491 6.14132L18.349 6.14132C17.7418 6.15019 17.2587 6.65523 17.2673 7.27175ZM18.2644 7.34594C18.2103 7.28773 18.1822 7.2452 18.1745 7.20917C18.1752 7.20664 18.1773 7.20057 18.1831 7.19C18.1947 7.16898 18.2146 7.14212 18.2445 7.10615C18.26 7.08753 18.278 7.06673 18.2976 7.04404C18.3247 7.01263 18.355 6.97758 18.3862 6.93959C18.416 6.97932 18.445 7.01604 18.471 7.04898C18.4897 7.07262 18.5068 7.09431 18.5216 7.11377C18.55 7.15124 18.5692 7.17946 18.5805 7.20167C18.5864 7.21314 18.5885 7.21993 18.5893 7.22307C18.5786 7.25741 18.5473 7.29779 18.489 7.35175C18.4681 7.37113 18.4467 7.38971 18.4238 7.4095C18.4138 7.41824 18.4034 7.42722 18.3927 7.43661C18.3857 7.44279 18.3785 7.44909 18.3714 7.45551C18.3537 7.43713 18.3359 7.41915 18.3191 7.40211C18.2988 7.3817 18.28 7.36266 18.2644 7.34594Z"
                        fill="#666666"
                        stroke="#666666"
                        strokeWidth="0.2"
                      ></path>
                    </svg>
                    <span className="text-2">Master Plan</span>
                  </div>
                </Button>
              </Stack>
              <Stack>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  Amenities
                </Typography>
                <ul>
                  {compound.aminatis.map((ami, index) => {
                    return <li key={index}>{ami[lang]}</li>;
                  })}
                </ul>
              </Stack>
              <Stack>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  Available Types
                </Typography>
                <ul>
                  {compound.type.map((typ, index) => {
                    return <li key={index}>{typ[lang]}</li>;
                  })}
                </ul>
              </Stack>
            </Stack>

            {compound.offers.length > 0 && (
              <Stack>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  Payment Plans
                </Typography>
                <Stack
                  sx={{
                    flexDirection: "row",
                    gap: 2,
                    flexWrap: "wrap",
                    justifyContent: {
                      xs: "center",
                      sm: "center",
                      md: "start",
                    },
                  }}
                >
                  {compound.offers.map((item, index) => {
                    return (
                      <Stack key={index} style={{ width: "fit-content" }}>
                        <div
                          style={{
                            display: "flex",
                            gap: "16px",
                          }}
                        >
                          <div className="pay">
                            <Box
                              sx={{
                                position: "absolute",
                                top: "30px",
                                width: "100%",
                                height: "100%",
                                textAlign: "center",
                                padding: "0 10px",
                              }}
                            >
                              <h3
                                style={{
                                  display: "flex",
                                  flexDirection: "column",
                                  alignItems: "center",
                                  justifyContent: "center",
                                  width: "100%",
                                  margin: "0",
                                }}
                              >
                                <Stack
                                  sx={{
                                    alignItems: "center",
                                    width: "100%",
                                  }}
                                >
                                  <Typography
                                    variant="h6"
                                    style={{
                                      fontFamily: "materialRegular",
                                      fontSize: "24px",
                                      fontWeight: "bold",
                                      marginRight: "15px",
                                    }}
                                  >
                                    {item.pers}%
                                  </Typography>
                                  <Typography
                                    variant="caption"
                                    style={{
                                      fontFamily: "materialRegular",
                                      fontSize: "15px",
                                      textAlign: "center",
                                      fontWeight: "bold",
                                    }}
                                  >
                                    Down Payment
                                  </Typography>
                                </Stack>

                                <Stack
                                  sx={{
                                    alignItems: "center",
                                    width: "100%",
                                    flexDirection: "row",
                                    justifyContent: "center",
                                  }}
                                >
                                  <Typography
                                    variant="h6"
                                    style={{
                                      fontFamily: "materialRegular",
                                      fontSize: "18px",
                                      fontWeight: "bold",
                                      backgroundColor: "#1e4164",
                                      color: "white",
                                      borderRadius: "50%",
                                      height: "23px",
                                      width: "23px",
                                      lineHeight: "1.2",
                                      padding: "2px",
                                    }}
                                  >
                                    {item.year}
                                  </Typography>
                                  <Typography
                                    variant="h6"
                                    style={{
                                      fontFamily: "materialRegular",
                                      fontSize: "18px",
                                      fontWeight: "bold",
                                    }}
                                  >
                                    Years
                                  </Typography>
                                </Stack>
                              </h3>
                              <Typography
                                sx={{
                                  color: "#ff914d",
                                  fontWeight: "bold",
                                  fontSize: "14px",
                                }}
                              >
                                {item.offer}
                              </Typography>
                            </Box>
                          </div>
                        </div>
                      </Stack>
                    );
                  })}
                </Stack>
              </Stack>
            )}
            <Typography sx={{ fontWeight: "bold", padding: "6px 0" }}>
              {`About ${compound.compoundName[lang]}`}
            </Typography>

            <Typography style={{ whiteSpace: "pre-wrap" }}>
              {compound.compoundDes[lang]}
            </Typography>
          </Stack>

          <Stack>
            {relatedProjects.length > 0 && (
              <>
                <Typography sx={{ fontWeight: "bold", padding: "6px 0" }}>
                  Explore Properties In {compound.compoundName[lang]}
                </Typography>
                <Row>
                  {relatedProjects.map((item) => {
                    // console.log(item.sold.en === true);
                    return (
                      <Col
                        className=" col-sm-6 col-12 col-lg-4 col-md-6"
                        style={{
                          marginBottom: "15px",
                          position: "relative",
                          maxHeight: "100%",
                        }}
                        key={item.id}
                      >
                        <Card
                          sx={{
                            position: "relative",
                            height: "100%",
                            display: "flex",
                            flexDirection: "column",
                            justifyContent: "space-between",
                          }}
                        >
                          <Link
                            to={`/developers/${devId}/${projId}/${item.id}`}
                            style={{ textDecoration: "none" }}
                          >
                            <Stack>
                              <Box sx={{ height: "215px" }}>
                                <img
                                  style={{
                                    height: "100%",
                                    width: "100%",
                                    objectFit: "cover",
                                  }}
                                  src={item.img[0]}
                                  alt=""
                                />
                              </Box>
                              <CardContent
                                style={{
                                  textAlign: "start",
                                  padding: "15px 15px 0 15px",
                                }}
                              >
                                <Stack>
                                  <Typography
                                    component="h2"
                                    sx={{
                                      lineHeight: "1.3",
                                      fontWeight: "bold",
                                    }}
                                    variant="h6"
                                  >
                                    {`${item.Type[lang]}`}
                                  </Typography>
                                  <Typography variant="caption">
                                    {`${
                                      lang === "ar"
                                        ? "التسليم في"
                                        : "Delivery Date"
                                    } ${item.delivery[lang]}`}
                                  </Typography>
                                </Stack>
                                <Stack
                                  sx={{
                                    flexDirection: "row",
                                    margin: "16px 0",
                                    gap: "0px 8px",
                                  }}
                                >
                                  <div className="svgicon">
                                    <p style={{ fontWeight: "bold" }}>
                                      {item.Bed[lang]}
                                    </p>
                                    <svg
                                      width="23"
                                      height="16"
                                      viewBox="0 0 23 16"
                                      fill="none"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        fill="#666666"
                                        stroke="#666666"
                                        strokeWidth="0.25"
                                        d="M20.5811 14.1659C20.5691 14.3825 20.545 14.563 20.545 14.7435C20.5209 15.5617 20.3525 15.7542 19.6305 15.7783C18.5476 15.8144 18.355 15.6941 18.2949 14.8037C18.2708 14.3705 18.1144 14.2261 17.6812 14.2261C13.5058 14.2381 9.34251 14.2381 5.16714 14.2261C4.69786 14.2261 4.5294 14.3584 4.54144 14.8398C4.55347 15.5497 4.31281 15.7542 3.60288 15.7783C3.44646 15.7783 3.278 15.7783 3.12157 15.7783C2.30334 15.7663 2.11082 15.5738 2.09879 14.7315C2.09879 14.575 2.08675 14.4186 2.07472 14.2261C1.94236 14.202 1.83407 14.1659 1.72577 14.1659C0.727052 14.1298 0.570627 13.9854 0.570627 13.0108C0.570627 11.988 0.522495 10.9652 0.618758 9.94242C0.84738 7.6562 2.4357 6.40479 4.70989 6.65748C4.81819 6.66951 4.93852 6.65748 4.98665 6.65748C4.98665 5.06916 4.98665 3.541 4.98665 2.0008C4.98665 1.90454 4.96258 1.79625 4.95055 1.69998C4.86632 0.845659 5.01071 0.76143 5.86504 0.773463C8.35582 0.809561 10.8346 0.809561 13.3133 0.773463C14.1436 0.76143 14.312 0.89379 14.1797 1.73608C14.1195 2.1091 14.0834 2.47008 14.0232 2.86716C14.9498 2.86716 15.8041 2.91529 16.6584 2.85513C17.5007 2.79497 17.6331 2.89123 17.5127 3.70946C17.4887 3.86588 17.4646 4.02231 17.4646 4.19077C17.4646 4.9729 17.4646 5.74299 17.4646 6.60935C17.8015 6.60935 18.1024 6.62138 18.3911 6.60935C20.2682 6.50106 21.7603 7.99312 21.9167 9.68974C22.025 10.9171 22.001 12.1685 21.9889 13.4079C21.9889 13.8651 21.7122 14.1539 21.2188 14.1539C21.0143 14.1659 20.8218 14.1659 20.5811 14.1659ZM20.0517 12.6739C20.0517 11.988 20.0276 11.3142 20.0637 10.6283C20.0878 10.171 19.8832 10.0507 19.4621 10.0507C14.0353 10.0628 8.60851 10.0628 3.18173 10.0507C2.74856 10.0507 2.56806 10.1831 2.56806 10.6283C2.5801 11.988 2.59213 13.3597 2.56806 14.7194C2.55603 15.2609 2.84482 15.309 3.25393 15.2729C3.62695 15.2489 4.07216 15.4294 4.07216 14.7435C4.07216 13.8892 4.26468 13.7327 5.11901 13.7327C9.29438 13.7327 13.4577 13.7327 17.6331 13.7327C18.5837 13.7327 18.7281 13.841 18.7642 14.7796C18.7882 15.3211 19.1131 15.2609 19.45 15.2729C19.823 15.285 20.0757 15.2368 20.0517 14.7676C20.0276 14.0817 20.0517 13.3838 20.0517 12.6739ZM21.5798 13.6605C21.4956 12.1685 21.5437 10.7005 21.291 9.28062C21.0504 7.92092 19.823 7.05456 18.5355 7.04253C17.3443 7.0305 16.153 7.0305 14.9618 7.04253C12.459 7.06659 9.96821 7.11473 7.4654 7.12676C6.57497 7.12676 5.67251 7.00643 4.78209 7.06659C3.99996 7.12676 3.15767 7.22302 2.48383 7.57197C1.54528 8.05328 1.13617 9.02793 1.076 10.0868C1.02787 11.0013 1.05194 11.9278 1.05194 12.8544C1.05194 13.7688 1.076 13.7929 2.07472 13.6244C2.07472 12.6618 2.07472 11.6872 2.07472 10.7125C2.07472 9.79803 2.26725 9.61754 3.15767 9.61754C5.25137 9.61754 7.34507 9.61754 9.4508 9.61754C12.7718 9.61754 16.0929 9.61754 19.4139 9.61754C20.2923 9.61754 20.5209 9.84616 20.5209 10.7246C20.5209 11.6992 20.5209 12.6859 20.5209 13.6846C20.8819 13.6605 21.1466 13.6605 21.5798 13.6605ZM11.5565 6.63342C11.5565 5.5625 11.5926 4.56378 11.5445 3.5771C11.5084 2.96342 11.5926 2.807 12.2063 2.8431C12.6395 2.86716 13.0606 2.91529 13.4938 2.95139C13.578 2.34975 13.6623 1.84438 13.7345 1.31494C10.9669 1.31494 8.22346 1.31494 5.50406 1.31494C5.50406 3.05969 5.50406 4.8285 5.50406 6.63342C7.57369 6.63342 9.5591 6.63342 11.5565 6.63342ZM16.9833 6.58528C16.9833 5.45421 16.9833 4.40736 16.9833 3.37254C15.3228 3.37254 13.6984 3.37254 12.11 3.37254C12.11 4.45549 12.11 5.50234 12.11 6.58528C13.7465 6.58528 15.3228 6.58528 16.9833 6.58528ZM12.4831 6.8861V6.89814C13.2892 6.89814 14.0954 6.89814 14.9016 6.89814V6.8861C14.0954 6.8861 13.2892 6.8861 12.4831 6.8861Z"
                                      ></path>
                                    </svg>
                                  </div>
                                  <div className="svgicon">
                                    <p style={{ fontWeight: "bold" }}>
                                      {item.Bath[lang]}
                                    </p>

                                    <svg
                                      width="22"
                                      height="21"
                                      viewBox="0 0 22 21"
                                      fill="none"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M0.841309 19.4389C1.0138 19.0859 1.30262 18.9816 1.68772 18.9897C2.98342 19.0057 4.2751 18.9977 5.5708 18.9977C5.643 18.9977 5.71521 18.9977 5.79945 18.9977C5.79945 18.749 5.79945 18.5203 5.79945 18.2796C5.68713 18.2596 5.57481 18.2435 5.4665 18.2154C4.8367 18.0309 4.42353 17.6298 4.27911 16.9879C4.04244 15.941 3.82582 14.894 3.60118 13.843C3.56909 13.6865 3.51293 13.5822 3.34846 13.506C2.95534 13.3215 2.75477 12.8682 2.85104 12.447C2.9433 12.0298 3.30032 11.7169 3.73356 11.7049C4.26708 11.6888 4.8006 11.6928 5.33412 11.7009C5.4665 11.7009 5.51464 11.6607 5.55475 11.5364C5.77538 10.8264 6.35704 10.3811 7.10317 10.3731C8.21033 10.3651 9.31748 10.3651 10.4246 10.3731C11.1788 10.3811 11.7645 10.8264 11.9891 11.5444C12.0011 11.5885 12.0172 11.6327 12.0332 11.6848C13.8223 11.6848 15.6074 11.6848 17.4046 11.6848C17.4086 11.6206 17.4166 11.5645 17.4166 11.5043C17.4166 8.47566 17.4206 5.44703 17.4166 2.41839C17.4166 1.39146 16.4258 0.729569 15.5152 1.13874C15.102 1.32326 14.8453 1.64819 14.741 2.08544C14.9215 2.16968 15.098 2.22985 15.2584 2.32612C15.6275 2.54675 15.8601 2.8797 15.9845 3.29288C16.0086 3.3691 16.0728 3.45735 16.1409 3.49345C16.5461 3.71007 16.7667 4.13127 16.6785 4.55247C16.5822 5.00176 16.2292 5.32267 15.7599 5.33069C14.8613 5.34674 13.9587 5.34273 13.0602 5.33069C12.6029 5.32267 12.2298 5.00176 12.1415 4.58055C12.0453 4.13528 12.2579 3.71408 12.6751 3.49746C12.7433 3.46136 12.8115 3.37712 12.8315 3.3009C13.012 2.70721 13.3931 2.3181 13.9908 2.13759C14.051 2.11753 14.1272 2.05334 14.1433 1.99718C14.3639 1.14676 14.8974 0.625272 15.7639 0.45278C15.7839 0.448768 15.8 0.436734 15.816 0.428711C15.9885 0.428711 16.161 0.428711 16.3375 0.428711C16.3495 0.436734 16.3576 0.448768 16.3696 0.45278C17.4928 0.733581 18.0223 1.41151 18.0223 2.57483C18.0223 5.53127 18.0223 8.4877 18.0223 11.4441C18.0223 11.5244 18.0223 11.6006 18.0223 11.7129C18.1788 11.7129 18.3192 11.7049 18.4556 11.7129C18.8848 11.741 19.2418 12.0499 19.33 12.467C19.4223 12.8923 19.2177 13.3375 18.8206 13.518C18.6641 13.5903 18.612 13.6905 18.5799 13.843C18.3553 14.906 18.1386 15.969 17.8939 17.0281C17.7455 17.6699 17.3163 18.063 16.6825 18.2315C16.5822 18.2596 16.4779 18.2676 16.3856 18.2836C16.3856 18.5323 16.3856 18.761 16.3856 19.0017C16.4819 19.0017 16.5622 19.0017 16.6424 19.0017C17.9822 19.0017 19.326 19.0017 20.6659 19.0017C21.0871 19.0017 21.3358 19.2544 21.3398 19.6756C21.3398 19.8441 21.3398 20.0086 21.3398 20.177C21.3398 20.6985 21.1111 20.9272 20.5816 20.9272C15.0177 20.9272 9.44986 20.9272 3.88599 20.9272C3.82582 20.9272 3.76565 20.9312 3.70548 20.9232C3.54101 20.8951 3.43671 20.8028 3.43671 20.6263C3.43671 20.4538 3.537 20.3535 3.70147 20.3295C3.77367 20.3174 3.84989 20.3255 3.9221 20.3255C9.44184 20.3255 14.9576 20.3255 20.4773 20.3255C20.5616 20.3255 20.6458 20.3255 20.73 20.3255C20.73 20.0727 20.73 19.8481 20.73 19.6154C14.2997 19.6154 7.87738 19.6154 1.45907 19.6154C1.45907 19.8601 1.45907 20.0888 1.45907 20.3255C1.80807 20.3255 2.14102 20.3255 2.47397 20.3255C2.69058 20.3255 2.82697 20.4418 2.83098 20.6183C2.835 20.8028 2.69459 20.9232 2.46594 20.9232C2.18514 20.9272 1.90434 20.9111 1.62354 20.9272C1.24245 20.9472 0.981709 20.7948 0.841309 20.4378C0.841309 20.1048 0.841309 19.7719 0.841309 19.4389ZM17.7335 14.9501C17.2281 14.9501 16.7467 14.9501 16.2693 14.9501C15.8682 14.9501 15.467 14.9501 15.0699 14.9501C14.8533 14.9501 14.7169 14.8298 14.7129 14.6533C14.7089 14.4728 14.8453 14.3564 15.0579 14.3484C15.106 14.3484 15.1501 14.3484 15.1983 14.3484C16.0126 14.3484 16.8269 14.3484 17.6412 14.3484C17.7134 14.3484 17.7816 14.3484 17.8619 14.3484C17.914 14.1037 17.9621 13.8751 18.0143 13.6344C15.1421 13.6344 12.286 13.6344 9.42178 13.6344C9.42178 13.8751 9.42178 14.1037 9.42178 14.3484C9.51003 14.3484 9.58224 14.3484 9.65445 14.3484C10.9822 14.3484 12.31 14.3484 13.6378 14.3484C13.706 14.3484 13.7702 14.3444 13.8384 14.3524C13.9948 14.3765 14.0911 14.4647 14.1031 14.6292C14.1152 14.8017 14.0189 14.906 13.8544 14.9421C13.7902 14.9582 13.722 14.9501 13.6539 14.9501C12.318 14.9501 10.9862 14.9501 9.65044 14.9501C9.57422 14.9501 9.498 14.9501 9.40574 14.9501C9.40574 15.1828 9.40975 15.3914 9.40574 15.596C9.39771 16.0092 9.13697 16.2739 8.7278 16.2739C7.87337 16.2779 7.01893 16.2739 6.16449 16.2739C5.75131 16.2739 5.49057 16.0132 5.48656 15.6C5.48255 15.3874 5.48656 15.1788 5.48656 14.9582C5.13355 14.9582 4.8006 14.9582 4.45562 14.9582C4.58398 15.5478 4.70433 16.1295 4.83269 16.7071C4.98112 17.3891 5.33412 17.6699 6.02409 17.6699C9.40574 17.6699 12.7914 17.6699 16.173 17.6699C16.2332 17.6699 16.2934 17.6699 16.3536 17.6659C16.8229 17.6378 17.204 17.349 17.3123 16.8957C17.4607 16.2619 17.5851 15.62 17.7335 14.9501ZM9.41376 12.2986C9.41376 12.5553 9.41376 12.7799 9.41376 13.0126C9.48195 13.0166 9.54213 13.0246 9.59829 13.0246C12.4905 13.0246 15.3828 13.0246 18.279 13.0246C18.3432 13.0246 18.4114 13.0206 18.4756 13.0046C18.6521 12.9564 18.7524 12.812 18.7404 12.6315C18.7283 12.455 18.608 12.3266 18.4235 12.3066C18.3513 12.2986 18.279 12.2986 18.2028 12.2986C15.3547 12.2986 12.5106 12.2986 9.66247 12.2986C9.58625 12.2986 9.51003 12.2986 9.41376 12.2986ZM8.796 13.0126C8.84414 12.3186 8.6556 11.6046 9.15302 11.0069C9.10889 10.9868 9.08883 10.9748 9.07279 10.9748C8.38683 10.9748 7.69686 10.9587 7.01091 10.9828C6.54157 10.9989 6.14444 11.3759 6.10031 11.8453C6.06421 12.2264 6.09229 12.6155 6.09229 13.0126C6.99486 13.0126 7.8854 13.0126 8.796 13.0126ZM14.3518 18.9856C14.3037 18.7971 14.2516 18.6326 14.2235 18.4642C14.1994 18.3037 14.1312 18.2636 13.9748 18.2636C12.0493 18.2676 10.1198 18.2676 8.19428 18.2676C8.13411 18.2676 8.07795 18.2676 8.00574 18.2676C7.94557 18.5123 7.88941 18.7409 7.82924 18.9856C10.0115 18.9856 12.1616 18.9856 14.3518 18.9856ZM14.404 4.00692C13.9708 4.00692 13.5375 4.00291 13.1043 4.01093C12.8596 4.01494 12.7192 4.15935 12.7232 4.37597C12.7272 4.58055 12.8716 4.72898 13.1003 4.73299C13.9708 4.737 14.8453 4.737 15.7157 4.73299C15.9364 4.73299 16.0768 4.58858 16.0928 4.39202C16.1089 4.1754 15.9524 4.01494 15.7037 4.01093C15.2705 4.00291 14.8372 4.00692 14.404 4.00692ZM8.79199 13.6424C7.8854 13.6424 6.99085 13.6424 6.10031 13.6424C6.10031 13.8871 6.10031 14.1158 6.10031 14.3364C7.0069 14.3364 7.89743 14.3364 8.79199 14.3364C8.79199 14.0957 8.79199 13.8711 8.79199 13.6424ZM8.79199 14.9662C7.8854 14.9662 6.99085 14.9662 6.10432 14.9662C6.10432 15.2109 6.10432 15.4395 6.10432 15.6602C7.01091 15.6602 7.90145 15.6602 8.79199 15.6602C8.79199 15.4195 8.79199 15.1948 8.79199 14.9662ZM5.47051 13.0246C5.47051 12.7679 5.47051 12.5393 5.47051 12.3026C4.90089 12.3026 4.35132 12.2986 3.79774 12.3066C3.57711 12.3106 3.44473 12.455 3.44072 12.6556C3.43671 12.8562 3.5731 13.0206 3.78571 13.0206C4.33929 13.0287 4.89688 13.0246 5.47051 13.0246ZM13.4573 3.39317C14.1031 3.39317 14.7289 3.39317 15.3627 3.39317C15.2544 2.96795 14.8372 2.6671 14.3879 2.67913C13.9427 2.69116 13.5375 2.99603 13.4573 3.39317ZM11.3834 11.6888C11.2751 11.2395 10.8298 10.9507 10.3444 10.9748C9.94327 10.9948 9.47794 11.404 9.498 11.6888C10.1198 11.6888 10.7456 11.6888 11.3834 11.6888ZM4.31923 14.3364C4.72037 14.3364 5.09344 14.3364 5.47051 14.3364C5.47051 14.0917 5.47051 13.863 5.47051 13.6384C5.03327 13.6384 4.60805 13.6384 4.17081 13.6384C4.22295 13.8751 4.27109 14.1037 4.31923 14.3364ZM6.42524 18.2796C6.42524 18.5203 6.42524 18.749 6.42524 18.9856C6.68999 18.9856 6.9387 18.9856 7.20747 18.9856C7.26363 18.757 7.3238 18.5243 7.38397 18.2796C7.05503 18.2796 6.74615 18.2796 6.42524 18.2796ZM15.7558 18.9856C15.7558 18.7409 15.7558 18.5163 15.7558 18.2796C15.4349 18.2796 15.1261 18.2796 14.7971 18.2796C14.8573 18.5243 14.9134 18.753 14.9736 18.9856C15.2384 18.9856 15.4871 18.9856 15.7558 18.9856Z"
                                        fill="#666666"
                                      ></path>
                                    </svg>
                                  </div>
                                  <div
                                    style={{
                                      display: "flex",
                                      alignItems: "center",
                                      gap: "3px",
                                    }}
                                  >
                                    <svg
                                      width="18"
                                      height="17"
                                      viewBox="0 0 18 17"
                                      fill="none"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M3.2555 2.8722C3.11743 2.8722 3.0055 2.98413 3.0055 3.1222L3.0055 5.3722C3.0055 5.51027 3.11743 5.6222 3.2555 5.6222C3.39357 5.6222 3.5055 5.51027 3.5055 5.3722L3.5055 3.3722L5.5055 3.3722C5.64357 3.3722 5.7555 3.26027 5.7555 3.1222C5.7555 2.98413 5.64357 2.8722 5.5055 2.8722L3.2555 2.8722ZM13.4195 12.9326L3.43228 2.94543L3.07873 3.29898L13.0659 13.2862L13.4195 12.9326Z"
                                        fill="#303030"
                                      ></path>
                                      <path
                                        d="M13.243 13.3592C13.3811 13.3592 13.493 13.2473 13.493 13.1092L13.493 10.8592C13.493 10.7212 13.3811 10.6092 13.243 10.6092C13.105 10.6092 12.993 10.7212 12.993 10.8592L12.993 12.8592L10.993 12.8592C10.855 12.8592 10.743 12.9712 10.743 13.1092C10.743 13.2473 10.855 13.3592 10.993 13.3592L13.243 13.3592ZM3.07908 3.29885L13.0663 13.286L13.4198 12.9325L3.43264 2.94529L3.07908 3.29885Z"
                                        fill="#313131"
                                      ></path>
                                      <rect
                                        x="0.682617"
                                        y="0.548828"
                                        width="15.9014"
                                        height="15.9014"
                                        rx="2.5"
                                        stroke="#313131"
                                      ></rect>
                                    </svg>
                                    <p
                                      style={{
                                        margin: "0 0 3px",
                                        fontWeight: "bold",
                                      }}
                                    >
                                      {item.Area}
                                      &nbsp;m²
                                    </p>
                                  </div>
                                </Stack>

                                <Box
                                  sx={{
                                    position: "absolute",
                                    top: "5px",
                                    left: "5px",
                                    backgroundColor: "rgb(255 145 77)",
                                    color: "red",
                                    borderRadius: " 5px ",
                                    width: "100px",
                                    height: "30px",
                                    display: "flex",
                                    justifyContent: "center",
                                    alignItems: "center",
                                  }}
                                >
                                  <p
                                    style={{
                                      fontWeight: "bold",
                                      color: "#1e4164",
                                      width: "100%",
                                      textAlign: "center",
                                    }}
                                  >
                                    {`${item.Sale[lang]}`}
                                  </p>
                                </Box>
                                {item.sold.en === "SOLD OUT" && (
                                  <Box
                                    sx={{
                                      position: "absolute",
                                      top: "5px",
                                      right: "5px",
                                      backgroundColor: "white",
                                      color: "red",
                                      borderRadius: " 5px ",
                                      border: "2px solid red",
                                      width: "100px",
                                      height: "30px",
                                      display: "flex",
                                      justifyContent: "center",
                                      alignItems: "center",
                                    }}
                                  >
                                    <p
                                      style={{
                                        fontWeight: "bold",
                                        color: "white",
                                        backgroundColor: "red",
                                        width: "95%",
                                        textAlign: "center",
                                      }}
                                    >
                                      {`${item.sold[lang]}`}
                                    </p>
                                  </Box>
                                )}

                                <Typography sx={{ fontWeight: "bold" }}>
                                  {`${Intl.NumberFormat("en-US").format(
                                    item.price
                                  )} ${
                                    item.monyType.en === "dollar"
                                      ? lang === "ar"
                                        ? "دولار"
                                        : "$"
                                      : lang === "ar"
                                      ? "جم"
                                      : "EGP"
                                  }`}
                                </Typography>
                              </CardContent>
                            </Stack>
                          </Link>
                          <Stack sx={{ margin: "0 10px 10px 0" }}>
                            <ContactUsIcon
                              sectionName="inventory"
                              sectionData={item}
                            />
                          </Stack>
                        </Card>
                      </Col>
                    );
                  })}
                </Row>
              </>
            )}
          </Stack>
        </Container>
        {/* <Card
          sx={{
            position: "fixed",
            height: "100vh",
            zIndex: 100,
            top: "0",
            transition: "0.5s",
            right: open ? "0" : "-100%",
            padding: "100px 50px ",
            width: { sm: "90%", md: "50%", xs: "100%" },
          }}
        >
          <img
            style={{ width: "100%", maxHeight: "100%" }}
            src={compound.masterplanImg[0]}
            alt=""
          />
          <IconButton
            onClick={() => {
              setOpen(false);
            }}
            sx={{ position: "absolute", right: "25px", top: "55px" }}
          >
            <Close sx={{ color: "red" }} />
          </IconButton>
        </Card>
        <Card
          sx={{
            position: "fixed",
            height: "100vh",
            zIndex: 100,
            top: "0",
            transition: "0.5s",
            right: imgopen ? "0" : "-100%",
            padding: "100px 10px ",
            width: { sm: "90%", md: "70%", xs: "100%" },
          }}
        >
          <TransformWrapper initialScale={1}>
            {({ zoomIn, zoomOut, resetTransform, ...rest }) => (
              <>
                <Controls />
                <TransformComponent>
                  <img
                    style={{ width: "100%", height: "100%" }}
                    src={imgsrc}
                    alt=""
                  />
                </TransformComponent>
              </>
            )}
          </TransformWrapper>
          <IconButton
            onClick={() => {
              setImgopen(false);
              setImgsrc("");
            }}
            sx={{ position: "absolute", right: "25px", top: "60px" }}
          >
            <Close sx={{ color: "red" }} />
          </IconButton>
        </Card> */}
      </div>
    </div>
  );
}

export default ProjectDe;
